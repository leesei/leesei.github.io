---
// Breadcrumbs need to specialize in two situations: "tags" and "posts"
export interface Props {
  context: "tags" | "posts" | "search" | "about";
  // additional contexts can be added here
  tag?: string;
  pageNum?: number;
  totalPages?: number;
}

const { context, tag, pageNum, totalPages } = Astro.props;

const hasThirdLevel =
  (context == "posts" && pageNum && totalPages) || (context == "tags" && tag);
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href="/">Home</a>
      <span aria-hidden="true">&#62;</span>
    </li>
    <li>
      <a href={`/${context}`}>
        <span class="capitalize" aria-current={hasThirdLevel ? "step" : "page"}>
          {context}
        </span>
      </a>
      {hasThirdLevel ? <span aria-hidden="true">&#62;</span> : ""}
    </li>
    <!-- render third level
      switching on `context` is enough as all other deps are checked already
    -->
    {
      context == "posts" ? (
        <li>
          <span aria-current="page">
            Page {pageNum} of {totalPages}
          </span>
        </li>
      ) : (
        ""
      )
    }
    {
      context == "tags" ? (
        <li>
          <span aria-current="page">{tag}</span>
        </li>
      ) : (
        ""
      )
    }
  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto mt-8 mb-1 w-full max-w-3xl px-4;
  }
  .breadcrumb ul li {
    @apply inline;
  }
  .breadcrumb ul li a {
    @apply capitalize opacity-70;
  }
  .breadcrumb ul li span {
    @apply opacity-70;
  }
  .breadcrumb ul li:not(:last-child) a {
    @apply hover:opacity-100;
  }
</style>
